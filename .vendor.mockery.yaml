all: False
disable-version-string: True
filename: "{{.InterfaceNameSnake}}.go"
mockname: "{{.InterfaceName}}Mock"
with-expecter: True
recursive: False
dir: mocks
outpkg: mocks
inpackage: False

# If you wish to mock an interface from the vendor, you need to define both the package and the specific interface you want to mock.

packages:
  net/http:
    interfaces:
      RoundTripper:
        config:
          mockname: RoundTripperMock
  io/fs:
    interfaces:
      StatFS:
        config:
          mockname: StatFSMock
  sigs.k8s.io/controller-runtime/pkg/controller:
    interfaces:
      Controller:
        config:
          mockname: RuntimeControllerMock
  sigs.k8s.io/controller-runtime/pkg/client:
    interfaces:
      Reader:
        config:
          mockname: ReaderMock
      Client:
        config:
          mockname: K8SClientMock
  sigs.k8s.io/controller-runtime/pkg/cache:
    interfaces:
      Informer:
        config:
          mockname: CacheInformerMock
  sigs.k8s.io/controller-runtime/pkg/source:
    interfaces:
      SyncingSource:
        config:
          mockname: SyncingSourceMock
  sigs.k8s.io/controller-runtime/pkg/manager:
    interfaces:
      Manager:
        config:
          mockname: ManagerMock
  k8s.io/client-go/tools/record:
    interfaces:
      EventRecorder:
        config:
          mockname: EventRecorderMock
      EventBroadcaster:
        config:
          mockname: EventBroadcasterMock
  k8s.io/client-go/tools/cache:
    interfaces:
      ResourceEventHandler:
        config:
          mockname: ResourceEventHandlerMock
      Watcher:
        config:
          mockname: CacheWatcherMock
  github.com/DataDog/datadog-go/statsd:
    interfaces:
      ClientInterface:
        config:
          mockname: ClientStatsdMock

