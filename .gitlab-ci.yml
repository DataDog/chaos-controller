# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2021 Datadog, Inc.

---
variables:
  CURRENT_CI_IMAGE: 0.4.0
  CONTROLLER_IMAGE_NAME: chaos-controller
  INJECTOR_IMAGE_NAME: chaos-injector
  HANDLER_IMAGE_NAME: chaos-handler

stages:
  - ci-image
  - build
  - pre-release
  - release
  - release-public
  - notify

# Slack Notify Base
.slack-notifier-base:
  stage: notify
  tags: [ "runner:main", "size:large" ]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/slack-notifier:latest
  allow_failure: true
  when: on_failure
  script:
    - BUILD_URL="$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID"
    - 'MESSAGE_TEXT=":siren: | The $CI_JOB_NAME Job Failed in the Pipeline $CI_PIPELINE_NAME Failed | [ $CI_PROJECT_NAME ][ $CI_COMMIT_REF_NAME ] [ <$BUILD_URL|$CI_PIPELINE_ID> ]   :siren:"'
    - postmessage "#test-chaosnotifier2" "$MESSAGE_TEXT"

# CI image
.docker-runner: &docker-runner
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:18.03.1
  tags:
    - "runner:docker"

ci-image:
  <<: *docker-runner
  stage: ci-image
  when: manual
  except: [tags, schedules]
  script:
    - docker build --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/chaos-controller:$CURRENT_CI_IMAGE ci
    - docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/chaos-controller:$CURRENT_CI_IMAGE

# main
.common: &common
  tags:
    - "runner:main"
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/chaos-controller:$CURRENT_CI_IMAGE

build:make:
  <<: *common
  stage: build
  when: always
  script:
    - exit -1
    #- make
  artifacts:
    paths:
      - bin/injector/injector
      - bin/manager/manager
      - bin/handler/handler

# meta-release
# release image and common stuff
.meta-release: &meta-release
  <<: *common
  tags:
    - "runner:docker"
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker-push:v2875076-79d562c-1.4.0
  before_script:
    - exit -1
    #- echo "Logging into the Docker Hub"
    #- DOCKER_REGISTRY_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.chaos-engineering.docker_hub_login --with-decryption --query "Parameter.Value" --out text)
    #- aws ssm get-parameter --region us-east-1 --name ci.chaos-engineering.docker_hub_pwd --with-decryption --query "Parameter.Value" --out text | docker login --username "$DOCKER_REGISTRY_LOGIN" --password-stdin docker.io

# pre-release
# build the target from the local Dockerfile and push it to
# AWS staging registry
.pre-release: &pre-release
  <<: *meta-release
  stage: pre-release
  script:
    - exit -1
    #- release.sh --build-from=./bin/manager/Dockerfile --build-context=./bin/manager/ 727006795293.dkr.ecr.us-east-1.amazonaws.com/${CONTROLLER_IMAGE_NAME} ${TAG}
    #- release.sh --build-from=./bin/injector/Dockerfile --build-context=./bin/injector/ 727006795293.dkr.ecr.us-east-1.amazonaws.com/${INJECTOR_IMAGE_NAME} ${TAG}
    #- release.sh --build-from=./bin/handler/Dockerfile --build-context=./bin/handler/ 727006795293.dkr.ecr.us-east-1.amazonaws.com/${HANDLER_IMAGE_NAME} ${TAG}
  dependencies:
    - build:make

# pre-release-ref
# build a reference image tag for controller images
pre-release-ref:
  <<: *pre-release
  when: manual
  except:
    - tags
  variables:
    TAG: "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"

# pre-release-tag
# build a tag image tag for controller images
pre-release-tag:
  <<: *pre-release
  when: always
  only:
    - tags
  variables:
    TAG: "${CI_COMMIT_TAG}"

# release
# build the target from the local Dockerfile and push it unified registry
.release: &release
  <<: *meta-release
  stage: release
  script:
    - release.sh --pull-from=727006795293.dkr.ecr.us-east-1.amazonaws.com/${IMAGE}:${TAG} eu.gcr.io/datadog-staging/${IMAGE} ${TAG}
    - release.sh --pull-from=727006795293.dkr.ecr.us-east-1.amazonaws.com/${IMAGE}:${TAG} eu.gcr.io/datadog-prod/${IMAGE} ${TAG}
    - release.sh --pull-from=727006795293.dkr.ecr.us-east-1.amazonaws.com/${IMAGE}:${TAG} 464622532012.dkr.ecr.us-east-1.amazonaws.com/${IMAGE} ${TAG}
    - release.sh --pull-from=727006795293.dkr.ecr.us-east-1.amazonaws.com/${IMAGE}:${TAG} 020998557671.dkr.ecr.us-east-1.amazonaws.com/${IMAGE} ${TAG}
    - release.sh --pull-from=727006795293.dkr.ecr.us-east-1.amazonaws.com/${IMAGE}:${TAG} registry.ddbuild.io/${IMAGE} ${TAG}
    - release.sh --pull-from=727006795293.dkr.ecr.us-east-1.amazonaws.com/${IMAGE}:${TAG} 486234852809.dkr.ecr.us-east-1.amazonaws.com/${IMAGE} ${TAG}
  before_script:
    - set -x
    - ./ci/supplement_docker_headers.sh

.release-ref: &release-ref
  <<: *release
  when: manual
  except:
    - tags

.release-tag: &release-tag
  <<: *release
  when: always
  only:
    - tags

release-controller-ref:
  <<: *release-ref
  variables:
    IMAGE: "${CONTROLLER_IMAGE_NAME}"
    TAG: "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"

release-injector-ref:
  <<: *release-ref
  variables:
    IMAGE: "${INJECTOR_IMAGE_NAME}"
    TAG: "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"

release-handler-ref:
  <<: *release-ref
  variables:
    IMAGE: "${HANDLER_IMAGE_NAME}"
    TAG: "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"

release-controller-tag:
  <<: *release-tag
  variables:
    IMAGE: "${CONTROLLER_IMAGE_NAME}"
    TAG: "${CI_COMMIT_TAG}"

release-injector-tag:
  <<: *release-tag
  variables:
    IMAGE: "${INJECTOR_IMAGE_NAME}"
    TAG: "${CI_COMMIT_TAG}"

release-handler-tag:
  <<: *release-tag
  variables:
    IMAGE: "${HANDLER_IMAGE_NAME}"
    TAG: "${CI_COMMIT_TAG}"

.release-docker-hub: &release-docker-hub
  <<: *meta-release
  stage: release-public
  tags: [ "runner:docker" ]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker-notary:v1912023-8c8dc1c-0.6.1
  script:
    - docker pull 727006795293.dkr.ecr.us-east-1.amazonaws.com/${CONTROLLER_IMAGE_NAME}:${TAG}
    - docker tag 727006795293.dkr.ecr.us-east-1.amazonaws.com/${CONTROLLER_IMAGE_NAME}:${TAG} datadog/${CONTROLLER_IMAGE_NAME}:${TAG}
    - docker push datadog/${CONTROLLER_IMAGE_NAME}:${TAG}
    - docker pull 727006795293.dkr.ecr.us-east-1.amazonaws.com/${INJECTOR_IMAGE_NAME}:${TAG}
    - docker tag 727006795293.dkr.ecr.us-east-1.amazonaws.com/${INJECTOR_IMAGE_NAME}:${TAG} datadog/${INJECTOR_IMAGE_NAME}:${TAG}
    - docker push datadog/${INJECTOR_IMAGE_NAME}:${TAG}
    - docker pull 727006795293.dkr.ecr.us-east-1.amazonaws.com/${HANDLER_IMAGE_NAME}:${TAG}
    - docker tag 727006795293.dkr.ecr.us-east-1.amazonaws.com/${HANDLER_IMAGE_NAME}:${TAG} datadog/${HANDLER_IMAGE_NAME}:${TAG}
    - docker push datadog/${HANDLER_IMAGE_NAME}:${TAG}

release-docker-hub-ref:
  <<: *release-docker-hub
  when: manual
  except:
    - tags
  variables:
    TAG: "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"

release-docker-hub-tag:
  <<: *release-docker-hub
  when: always
  only:
    - tags
  variables:
    TAG: "${CI_COMMIT_TAG}"

# notify slack when the pre-release job fails
slack-notifier-pre-release.on-failure:
  extends: .slack-notifier-base
  variables:
    CI_PIPELINE_NAME: "Pre-Release"
  needs: ["pre-release-ref"]

# notify slack when the release related jobs fail
slack-notifier-release-controller.on-failure:
  extends: .slack-notifier-base
  variables:
    CI_PIPELINE_NAME: "Release"
  needs: ["release-controller-ref"]

slack-notifier-release-handler.on-failure:
  extends: .slack-notifier-base
  variables:
    CI_PIPELINE_NAME: "Release"
  needs: ["release-handler-ref"]

slack-notifier-release-injector.on-failure:
  extends: .slack-notifier-base
  variables:
    CI_PIPELINE_NAME: "Release"
  needs: ["release-injector-ref"]

# notify slack when the build job fails ONLY on the main and tags branches
slack-notifier-build.on-failure:
  extends: .slack-notifier-base
  variables:
    CI_PIPELINE_NAME: "Build"
  needs: ["build:make"]
  #only:
  #  - main
  #  - tags
