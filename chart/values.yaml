# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2021 Datadog, Inc.

images: # images and tag to pull for each component of the stack
  controller: docker.io/library/chaos-controller
  injector: docker.io/library/chaos-injector
  handler: docker.io/library/chaos-handler
  tag: latest
  pullSecrets: false # name of the secret object to use when pulling images

controller:
  deleteOnly: false # enable delete-only mode
  metricsSink: noop # metrics driver (noop or datadog)
  notifiers:
    common:
      clusterName: "minikube"
    noop:
      enabled: true
    slack:
      enabled: false
      tokenFilepath: ""
  defaultDuration: 1h # default spec.duration for a disruption with none specified
  expiredDisruptionGCDelay: 15m # time after a disruption expires before deleting it
  webhook: # admission webhook configuration
    generateCert: false # if you want Helm to generate certificates (e.g. in case the cert-manager is not installed in the cluster) set this to true
    certDir: "" # certificate directory (must contain tls.crt and tls.key files)
    host: "" # host to use to serve requests
    port: 9443 # port to use to serve requests

injector:
  annotations: {} # extra annotations passed to the chaos injector pods
  serviceAccount: chaos-injector # service account to use for the chaos injector pods
  serviceAccountNamespace: chaos-engineering # namespace where the service account can be found (NOTE: changing this will change the namespace in which the chaos pods are created)
  dnsDisruption:
    dnsServer: "8.8.8.8"
    kubeDns: "off"
  networkDisruption: # network disruption general configuration
    allowedHosts: [] # list of always allowed hosts (even if explicitly blocked by a network disruption)
    # (here's the expected format, all fields are optional)
    # allowedHosts:
    #   - host: 10.0.0.0/8
    #     port: 80
    #     protocol: tcp

handler:
  enabled: true # enable the chaos handler (required to use the onInit disruption feature)
  timeout: 1m # time the handler init container will wait before exiting if no signal is received
