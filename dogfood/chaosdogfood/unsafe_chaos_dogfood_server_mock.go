// Code generated by mockery. DO NOT EDIT.

// Unless explicitly stated otherwise all files in this repository are licensed
// under the Apache License Version 2.0.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2024 Datadog, Inc.
package chaosdogfood

import mock "github.com/stretchr/testify/mock"

// UnsafeChaosDogfoodServerMock is an autogenerated mock type for the UnsafeChaosDogfoodServer type
type UnsafeChaosDogfoodServerMock struct {
	mock.Mock
}

type UnsafeChaosDogfoodServerMock_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeChaosDogfoodServerMock) EXPECT() *UnsafeChaosDogfoodServerMock_Expecter {
	return &UnsafeChaosDogfoodServerMock_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedChaosDogfoodServer provides a mock function with given fields:
func (_m *UnsafeChaosDogfoodServerMock) mustEmbedUnimplementedChaosDogfoodServer() {
	_m.Called()
}

// UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedChaosDogfoodServer'
type UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedChaosDogfoodServer is a helper method to define mock.On call
func (_e *UnsafeChaosDogfoodServerMock_Expecter) mustEmbedUnimplementedChaosDogfoodServer() *UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call {
	return &UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call{Call: _e.mock.On("mustEmbedUnimplementedChaosDogfoodServer")}
}

func (_c *UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call) Run(run func()) *UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call) Return() *UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call) RunAndReturn(run func()) *UnsafeChaosDogfoodServerMock_mustEmbedUnimplementedChaosDogfoodServer_Call {
	_c.Call.Return(run)
	return _c
}

// NewUnsafeChaosDogfoodServerMock creates a new instance of UnsafeChaosDogfoodServerMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeChaosDogfoodServerMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeChaosDogfoodServerMock {
	mock := &UnsafeChaosDogfoodServerMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
