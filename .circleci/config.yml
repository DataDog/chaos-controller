# Unless explicitly stated otherwise all files in this repository are licensed
# under the Apache License Version 2.0.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2020 Datadog, Inc.

version: 2

templates:
  save_cache: &save_cache
    key: env-{{ .Revision }}
    paths:
      - /go
      - /usr/local/bin/golangci-lint
      - /usr/local/kubebuilder
  restore_cache: &restore_cache
    key: env-{{ .Revision }}
  working_directory: &working_directory
    working_directory: /go/src/github.com/DataDog/chaos-fi-controller
  go_job_template: &go_job_template
    <<: *working_directory
    docker:
      # TODO: Publicize the chaos controller ci image to the datadog docker registry
      #- image: datadog/chaos-controller-runner-circle:<< pipeline.parameters.CURRENT_CI_IMAGE >>
      - image: golang:1.13.6-stretch
    environment:
      KUBEBUILDER_VERSION: 1.0.8
      KUBEBUILDER_ARCH: amd64
      GOLANGCI_LINT_VERSION: 1.23.1
      GIT_LFS_SKIP_SMUDGE: 1
  python_job_template: &python_job_template
    <<: *working_directory
    docker:
      - image: python:3.8.1-alpine3.10
  bash_job_template: &bash_job_template
    <<: *working_directory
    docker:
      - image: bash:5.0
  install_python_requirements: &install_python_requirements
    run:
      name: Install Python requirements
      command: pip3 install -r tasks/requirements.txt

jobs:
  prepare-env:
    <<: *go_job_template
    steps:
      - checkout
      - run:
          name: Install kubebuilder
          command: |
            cd /usr/local
            curl -L -O "https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${KUBEBUILDER_VERSION}/kubebuilder_${KUBEBUILDER_VERSION}_linux_${KUBEBUILDER_ARCH}.tar.gz"
            tar -zxvf kubebuilder_${KUBEBUILDER_VERSION}_linux_${KUBEBUILDER_ARCH}.tar.gz
            mv kubebuilder_${KUBEBUILDER_VERSION}_linux_${KUBEBUILDER_ARCH} kubebuilder
            export PATH="/usr/local/kubebuilder/bin:${PATH}"
      - run:
          name: Install golangci-lint tool
          command: |
            cd /usr/local
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v${GOLANGCI_LINT_VERSION}
      - run:
          name: Cache local dependencies
          command: go mod download
      - save_cache: *save_cache
  dependencies:
    <<: *go_job_template
    steps:
      - restore_cache: *restore_cache
      - run:
          name: Ensure dependencies are up-to-date
          command: |
            go mod tidy
            git diff --exit-code
  vet:
    <<: *go_job_template
    steps:
      - restore_cache: *restore_cache
      - run: make vet
  fmt:
    <<: *go_job_template
    steps:
      - restore_cache: *restore_cache
      - run: make fmt
  lint:
    <<: *go_job_template
    steps:
      - restore_cache: *restore_cache
      - run: make lint
  test:
    <<: *go_job_template
    steps:
      - restore_cache: *restore_cache
      - run: make test
  3rd-party-licenses:
    <<: *python_job_template
    steps:
      - checkout
      - *install_python_requirements
      - run:
          name: Ensure 3rd-party licences are up-to-date
          command: python3 tasks/3rdparty.py
  license-header:
    <<: *bash_job_template
    steps:
      - checkout
      - run:
          name: Ensure license header is present
          command: ./tasks/header.sh

workflows:
  version: 2
  test_and_build:
    jobs:
      - prepare-env
      - dependencies:
          requires:
            - prepare-env
      - vet:
          requires:
            - prepare-env
      - fmt:
          requires:
            - prepare-env
      - lint:
          requires:
            - prepare-env
      - test:
          requires:
            - prepare-env
      - 3rd-party-licenses
      - license-header
